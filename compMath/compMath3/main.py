import math


def integrate_middle_rect(f, a, b, n):
    """
    Вычисляет приближенное значение определенного интеграла функции f на интервале [a, b]
    с использованием метода средних прямоугольников с n прямоугольниками.
    """
    dx = (b - a) / n  # ширина прямоугольников
    x = a + dx / 2  # координата центра первого прямоугольника
    area = 0  # суммарная площадь всех прямоугольников

    for i in range(n):
        area += f(x) * dx  # вычисляем площадь текущего прямоугольника
        x += dx  # перемещаемся к центру следующего прямоугольника

    return area


def integrate_left_rect(f, a, b, n):
    """
    Вычисляет приближенное значение определенного интеграла функции f на интервале [a, b]
    с использованием метода левых прямоугольников с n прямоугольниками.
    """
    dx = (b - a) / n  # ширина прямоугольников
    x = a  # координата левого края первого прямоугольника
    area = 0  # суммарная площадь всех прямоугольников

    for i in range(n):
        area += f(x) * dx  # вычисляем площадь текущего прямоугольника
        x += dx  # перемещаемся к левому краю следующего прямоугольника

    return area


def integrate_right_rect(f, a, b, n):
    """
    Вычисляет приближенное значение определенного интеграла функции f на интервале [a, b]
    с использованием метода правых прямоугольников с n прямоугольниками.
    """
    dx = (b - a) / n  # ширина прямоугольников
    x = a + dx  # координата правого края первого прямоугольника
    area = 0  # суммарная площадь всех прямоугольников

    for i in range(n):
        area += f(x) * dx  # вычисляем площадь текущего прямоугольника
        x += dx  # перемещаемся к правому краю следующего прямоугольника

    return area


result = integrate_middle_rect(lambda x: math.sin(x), 0, 1, 100)
print(result)
